version: '3.8'

services:
  # LangGraph Backend Service (NEW - for React Native compatibility)
  langgraph-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - tradeflow-network
    depends_on:
      - redis
      - postgres

  # VROOM routing engine service
  vroom:
    build:
      context: ./docker/vroom
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - VROOM_PORT=3000
      - OSRM_URL=http://osrm:5000
    depends_on:
      - osrm
    volumes:
      - ./docker/vroom/config:/app/config
    networks:
      - tradeflow-network

  # OSRM routing engine service
  osrm:
    image: osrm/osrm-backend:latest
    ports:
      - "5000:5000"
    volumes:
      - ./docker/osrm/data:/data
    command: osrm-routed --algorithm mld /data/north-america-latest.osrm
    networks:
      - tradeflow-network

  # Optional: Redis for caching routing results
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tradeflow-network

  # Optional: PostgreSQL for routing engine data
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: tradeflow_routing
      POSTGRES_USER: routing_user
      POSTGRES_PASSWORD: routing_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - tradeflow-network

networks:
  tradeflow-network:
    driver: bridge

volumes:
  redis_data:
  postgres_data: 